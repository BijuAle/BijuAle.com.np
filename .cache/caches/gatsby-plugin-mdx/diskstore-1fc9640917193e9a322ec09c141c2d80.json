{"expireTime":9007200868534025000,"key":"gatsby-plugin-mdx-entire-payload-ff5e7510fb78f4d6564e4a928ed9df49-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Steps","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":8,"offset":8},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":8,"offset":8},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Choose and/or combine the given usecase(s).","position":{"start":{"line":4,"column":3,"offset":12},"end":{"line":4,"column":46,"offset":55},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":12},"end":{"line":4,"column":46,"offset":55},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":10},"end":{"line":4,"column":46,"offset":55},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Run the respective script in bash.","position":{"start":{"line":5,"column":3,"offset":58},"end":{"line":5,"column":37,"offset":92},"indent":[]}},{"type":"break","position":{"start":{"line":5,"column":37,"offset":92},"end":{"line":6,"column":3,"offset":97},"indent":[3]}},{"type":"text","value":"(replacing ","position":{"start":{"line":6,"column":3,"offset":97},"end":{"line":6,"column":14,"offset":108},"indent":[]}},{"type":"inlineCode","value":"<source>","position":{"start":{"line":6,"column":14,"offset":108},"end":{"line":6,"column":24,"offset":118},"indent":[]}},{"type":"text","value":" & ","position":{"start":{"line":6,"column":24,"offset":118},"end":{"line":6,"column":27,"offset":121},"indent":[]}},{"type":"inlineCode","value":"<destination>","position":{"start":{"line":6,"column":27,"offset":121},"end":{"line":6,"column":42,"offset":136},"indent":[]}},{"type":"text","value":" with actual directory paths.)","position":{"start":{"line":6,"column":42,"offset":136},"end":{"line":6,"column":72,"offset":166},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":58},"end":{"line":6,"column":72,"offset":166},"indent":[3]}}],"position":{"start":{"line":5,"column":1,"offset":56},"end":{"line":6,"column":72,"offset":166},"indent":[1]}}],"position":{"start":{"line":4,"column":1,"offset":10},"end":{"line":6,"column":72,"offset":166},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Script","position":{"start":{"line":8,"column":3,"offset":170},"end":{"line":8,"column":9,"offset":176},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":168},"end":{"line":8,"column":9,"offset":176},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"# usecase 1: simple recursive file-only backup\nrsync -r <source>/ <destination>/\n\n# usecase 2: -a to recurse and preserve file metadata including symlinks, permissions, mod time, groups, owners etc.\nrsync -a <source>/ <destination>/\n\n# usecase 3: dry-run/check changes to be made based on source\nrsync -av --dry-run <source>/ <destination>/\n\n# usecase 4:  Mirror source to destination, and remove exclusive changes in destination\nrsync -av --delete --dry-run <source>/ <destination>/\n\n# usecase 5: Backup to remote machine, -z to compress\nrsybc -zaP <Source> user_name@ip_address:<destination>","position":{"start":{"line":10,"column":1,"offset":178},"end":{"line":25,"column":4,"offset":783},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Required Tools","position":{"start":{"line":27,"column":3,"offset":787},"end":{"line":27,"column":17,"offset":801},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":785},"end":{"line":27,"column":17,"offset":801},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"rsync","position":{"start":{"line":29,"column":3,"offset":805},"end":{"line":29,"column":8,"offset":810},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":805},"end":{"line":29,"column":8,"offset":810},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":803},"end":{"line":29,"column":8,"offset":810},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"cwRsync (For Windows Only)","position":{"start":{"line":30,"column":3,"offset":813},"end":{"line":30,"column":29,"offset":839},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":813},"end":{"line":30,"column":29,"offset":839},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":811},"end":{"line":30,"column":29,"offset":839},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":803},"end":{"line":30,"column":29,"offset":839},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"OS","position":{"start":{"line":32,"column":3,"offset":843},"end":{"line":32,"column":5,"offset":845},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":841},"end":{"line":32,"column":5,"offset":845},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Unix-like","position":{"start":{"line":34,"column":3,"offset":849},"end":{"line":34,"column":12,"offset":858},"indent":[]}}],"position":{"start":{"line":34,"column":3,"offset":849},"end":{"line":34,"column":12,"offset":858},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":847},"end":{"line":34,"column":12,"offset":858},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"MS Windows","position":{"start":{"line":35,"column":3,"offset":861},"end":{"line":35,"column":13,"offset":871},"indent":[]}}],"position":{"start":{"line":35,"column":3,"offset":861},"end":{"line":35,"column":13,"offset":871},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":859},"end":{"line":35,"column":13,"offset":871},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":847},"end":{"line":35,"column":13,"offset":871},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Powerful Backup Utility - rsync usecases\",\"date\":\"2020-02-24T00:00:00.000Z\",\"tags\":[\"Nifty Computing\"]}","position":{"start":{"line":38,"column":1,"offset":874},"end":{"line":38,"column":142,"offset":1015},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":38,"column":142,"offset":1015}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Powerful Backup Utility - rsync usecases\",\n  \"date\": \"2020-02-24T00:00:00.000Z\",\n  \"tags\": [\"Nifty Computing\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"steps\"\n  }, \"Steps\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Choose and/or combine the given usecase(s).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run the respective script in bash.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"(replacing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<source>\"), \" & \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<destination>\"), \" with actual directory paths.)\")), mdx(\"h1\", {\n    \"id\": \"script\"\n  }, \"Script\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"bash\",\n    \"terminal\": \"carbon\",\n    \"theme\": \"night-owl\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", _extends({\n    parentName: \"deckgo-highlight-code\"\n  }, {\n    \"slot\": \"code\"\n  }), \"# usecase 1: simple recursive file-only backup\\nrsync -r <source>/ <destination>/\\n\\n# usecase 2: -a to recurse and preserve file metadata including symlinks, permissions, mod time, groups, owners etc.\\nrsync -a <source>/ <destination>/\\n\\n# usecase 3: dry-run/check changes to be made based on source\\nrsync -av --dry-run <source>/ <destination>/\\n\\n# usecase 4:  Mirror source to destination, and remove exclusive changes in destination\\nrsync -av --delete --dry-run <source>/ <destination>/\\n\\n# usecase 5: Backup to remote machine, -z to compress\\nrsybc -zaP <Source> user_name@ip_address:<destination>\"), \"\\n        \"), mdx(\"h1\", {\n    \"id\": \"required-tools\"\n  }, \"Required Tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rsync\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cwRsync (For Windows Only)\")), mdx(\"h1\", {\n    \"id\": \"os\"\n  }, \"OS\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unix-like\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MS Windows\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Powerful Backup Utility - rsync usecases\",\n  \"date\": \"2020-02-24T00:00:00.000Z\",\n  \"tags\": [\"Nifty Computing\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"steps\"\n    }}>{`Steps`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Choose and/or combine the given usecase(s).`}</li>\n      <li parentName=\"ul\">{`Run the respective script in bash.`}<br parentName=\"li\"></br>\n        {`(replacing `}<inlineCode parentName=\"li\">{`<source>`}</inlineCode>{` & `}<inlineCode parentName=\"li\">{`<destination>`}</inlineCode>{` with actual directory paths.)`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"script\"\n    }}>{`Script`}</h1>\n    <deckgo-highlight-code {...{\n      \"language\": \"bash\",\n      \"terminal\": \"carbon\",\n      \"theme\": \"night-owl\",\n      \"line-numbers\": \"true\"\n    }}>{`\n          `}<code parentName=\"deckgo-highlight-code\" {...{\n        \"slot\": \"code\"\n      }}>{`# usecase 1: simple recursive file-only backup\nrsync -r <source>/ <destination>/\n\n# usecase 2: -a to recurse and preserve file metadata including symlinks, permissions, mod time, groups, owners etc.\nrsync -a <source>/ <destination>/\n\n# usecase 3: dry-run/check changes to be made based on source\nrsync -av --dry-run <source>/ <destination>/\n\n# usecase 4:  Mirror source to destination, and remove exclusive changes in destination\nrsync -av --delete --dry-run <source>/ <destination>/\n\n# usecase 5: Backup to remote machine, -z to compress\nrsybc -zaP <Source> user_name@ip_address:<destination>`}</code>{`\n        `}</deckgo-highlight-code>\n    <h1 {...{\n      \"id\": \"required-tools\"\n    }}>{`Required Tools`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`rsync`}</li>\n      <li parentName=\"ul\">{`cwRsync (For Windows Only)`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"os\"\n    }}>{`OS`}</h1>\n    <ul>\n      <li parentName=\"ul\">{`Unix-like`}</li>\n      <li parentName=\"ul\">{`MS Windows`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}