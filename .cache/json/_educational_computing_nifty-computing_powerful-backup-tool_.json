{"data":{"site":{"siteMetadata":{"author":"Biju Ale"}},"mdx":{"headings":[{"depth":1,"value":"Steps"},{"depth":1,"value":"Script"},{"depth":1,"value":"Required Tools"},{"depth":1,"value":"OS"}],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Powerful Backup Utility - rsync usecases\",\n  \"date\": \"2020-02-24T00:00:00.000Z\",\n  \"tags\": [\"Nifty Computing\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"steps\"\n  }, \"Steps\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Choose and/or combine the given usecase(s).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run the respective script in bash.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"(replacing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<source>\"), \" & \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<destination>\"), \" with actual directory paths.)\")), mdx(\"h1\", {\n    \"id\": \"script\"\n  }, \"Script\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"bash\",\n    \"terminal\": \"carbon\",\n    \"theme\": \"night-owl\",\n    \"line-numbers\": \"true\"\n  }, \"\\n          \", mdx(\"code\", _extends({\n    parentName: \"deckgo-highlight-code\"\n  }, {\n    \"slot\": \"code\"\n  }), \"# usecase 1: simple recursive file-only backup\\nrsync -r <source>/ <destination>/\\n\\n# usecase 2: -a to recurse and preserve file metadata including symlinks, permissions, mod time, groups, owners etc.\\nrsync -a <source>/ <destination>/\\n\\n# usecase 3: dry-run/check changes to be made based on source\\nrsync -av --dry-run <source>/ <destination>/\\n\\n# usecase 4:  Mirror source to destination, and remove exclusive changes in destination\\nrsync -av --delete --dry-run <source>/ <destination>/\\n\\n# usecase 5: Backup to remote machine, -z to compress\\nrsybc -zaP <Source> user_name@ip_address:<destination>\"), \"\\n        \"), mdx(\"h1\", {\n    \"id\": \"required-tools\"\n  }, \"Required Tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rsync\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cwRsync (For Windows Only)\")), mdx(\"h1\", {\n    \"id\": \"os\"\n  }, \"OS\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unix-like\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MS Windows\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Powerful Backup Utility - rsync usecases","date":"February 24, 2020","tags":["Nifty Computing"]},"fields":{"slug":"/educational/computing/nifty-computing/powerful-backup-tool/"},"excerpt":"Steps Choose and/or combine the given usecase(s). Run the respective script in bash. (replacing  <source>  &  <destination>  with actualâ€¦"}},"pageContext":{"id":"42c45daa-1695-5349-9ea4-93dcd56da848"}}