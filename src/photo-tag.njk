---
layout: layouts/base.njk
pagination:
  data: photos.tags
  size: 1
  alias: tag
permalink: "photo-tag/{{ tag }}/index.html"
---

<a href="{{ '/photo-memories' }}" class="back-btn">← Photo Memories</a>

<div class="thumbs">
  {% for photo in photos.byTag[tag] %} {% set thumb = photo.secure_url |
  replace('/upload/', '/upload/w_60,h_60,c_fill,q_auto/') %}
  <img
    src="{{ thumb }}"
    alt="Thumbnail for {{ photo.alt or 'Photo' }}"
    class="thumb {% if loop.first %}active-thumb{% endif %}"
    data-full="{{ photo.url }}"
    role="button"
    aria-label="View {{ photo.alt or 'photo' }}"
  />
  {% endfor %}
</div>
<div class="container">
  <div class="photo-div">
    <button class="nav-btn prev-btn" aria-label="Previous photo">←</button>
    <button class="nav-btn next-btn" aria-label="Next photo">→</button>
    {% for photo in photos.byTag[tag] %}
    <img
      src="{{ photo.url }}"
      alt="{{ photo.alt or 'Photo' }}"
      class="{% if loop.first %}active{% else %}hidden{% endif %}"
      data-full="{{ photo.url }}"
    />
    {% endfor %}
  </div>

  <div class="metadata-div">
    {% for photo in photos.byTag[tag] %} {% if photo.context and
    photo.context.caption %}
    <div
      class="caption metadata {% if loop.first %}active{% else %}hidden{% endif %}"
      data-full="{{ photo.url }}"
    >
      {{ photo.context.caption }}
    </div>
    {% endif %}
    <hr
      class="metadata {% if loop.first %}active{% else %}hidden{% endif %}"
      data-full="{{ photo.url }}"
    />
    <table
      class="metadata {% if loop.first %}active{% else %}hidden{% endif %}"
      data-full="{{ photo.url }}"
    >
      {% if photo.context.DateTimeOriginal %}
      <tr>
        <td class="label">Photo Taken On</td>
        <td>{{ photo.context.DateTimeOriginal }}</td>
      </tr>
      {% endif %} {% if photo.context.Make %}
      <tr>
        <td class="label">Camera</td>
        <td>{{ photo.context.Make }} {{ photo.context.Model }}</td>
      </tr>
      {% endif %} {% if photo.context.iso %}
      <tr>
        <td class="label">ISO</td>
        <td>{{ photo.context.iso }}</td>
      </tr>
      {% endif %} {% if photo.context.ApertureValue %}
      <tr>
        <td class="label">Aperture</td>
        <td>{{ photo.context.ApertureValue }}</td>
      </tr>
      {% endif %} {% if photo.context.FocalLength %}
      <tr>
        <td class="label">Focal Length</td>
        <td>{{ photo.context.FocalLength }}</td>
      </tr>
      {% endif %} {% if photo.context.ExposureTime %}
      <tr>
        <td class="label">Shutter Speed</td>
        <td>{{ photo.context.ExposureTime }}</td>
      </tr>
      {% endif %} {% if photo.width %}
      <tr>
        <td class="label">Dimensions</td>
        <td>{{ photo.width }} × {{ photo.height }} px</td>
      </tr>
      {% endif %}
      <tr>
        <td class="label">Copyright</td>
        <td>© {% year %} Biju Ale</td>
      </tr>
    </table>
    {% if photo.context.gps %}
    <div
      class="map metadata {% if loop.first %}active{% else %}hidden{% endif %}"
      data-full="{{ photo.url }}"
    >
      <span class="label"> Photo Snap Location: </span>

      {% set gps = photo.context.gps | replace(' ', '') %} {% set lat =
      gps.split(',')[0] %} {% set lng = gps.split(',')[1] %}

      <iframe
        width="100%"
        height="320"
        frameborder="0"
        style="border: 0"
        referrerpolicy="no-referrer-when-downgrade"
        src="https://maps.google.com/maps?q={{ lat }},{{
          lng
        }}&z=15&t=k&output=embed"
        allowfullscreen
      ></iframe>
    </div>
    {% endif %} {% endfor %}
  </div>
</div>

<style>
  .container {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    margin: 0 auto;
    padding: 10px;
  }
  .photo-div {
    width: 70%;
    border: 1px solid black;
    position: relative;
  }
  .metadata-div {
    width: 20%;
    padding: 10px;
    border: 1px solid black;
    overflow-y: auto; /* Allow vertical scrolling for long content */
  }
  .photo-div img {
    width: 100%;
    display: block;
  }
  .thumbs {
    margin: 0 auto;
    overflow-x: auto;
    border: 1px solid black;
    display: flex;
    gap: 1px;
    padding: 1px;
    scroll-behavior: smooth;
  }
  .thumbs img {
    cursor: pointer;
    -webkit-filter: grayscale(100%);
    filter: grayscale(100%);
    -webkit-transition: 0.3s ease-in-out;
    transition: 0.3s ease-in-out;
  }
  .thumbs img:hover,
  .thumbs img.active-thumb {
    -webkit-filter: grayscale(0);
    filter: grayscale(0);
  }
  .photo-div img,
  .metadata-div .metadata {
    transition: opacity 0.3s ease;
    opacity: 1;
  }
  .photo-div img.hidden,
  .metadata-div .metadata.hidden {
    display: none;
  }
  .photo-div img.active,
  .metadata-div .metadata.active {
    display: block;
  }
  .metadata td.label,
  .label {
    text-align: right;
    font-family: "Garamond R";
    font-size: clamp(0.75rem, 2vw, 0.9rem); /* Responsive font size */
    width: 40%; /* Ensure label column isn’t too narrow */
  }
  .metadata td:nth-child(2) {
    text-align: center;
    font-style: italic;
    font-family: "Garamond Italic";
    font-size: clamp(0.75rem, 2vw, 0.9rem);
    word-break: break-word; /* Prevent overflow of long text */
  }
  .caption {
    font-size: clamp(1rem, 3vw, 1.2rem);
    font-style: italic;
    font-family: "Garamond Italic";
    background: rgb(154, 154, 109);
    padding: 0.5rem;
    margin-bottom: 0.5rem;
  }
  .nav-btn {
    position: absolute;
    top: 10px;
    background: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    padding: 10px;
    cursor: pointer;
    font-size: 1.2rem;
    z-index: 10;
  }
  .prev-btn {
    left: 10px;
  }
  .next-btn {
    right: 10px;
  }
  .nav-btn:hover {
    background: rgba(0, 0, 0, 0.8);
  }

  table td {
    padding: 4px 1.5px !important;
  }

  /* Mobile-friendly table */
  @media (max-width: 600px) {
    .container {
      flex-direction: column; /* Stack photo and metadata */
    }
    .photo-div,
    .metadata-div {
      width: 100%; /* Full width on mobile */
      box-sizing: border-box;
    }
    .metadata-div {
      max-height: 50vh; /* Limit height to avoid overwhelming screen */
    }
    .metadata table {
      width: 100%;
      border-collapse: collapse;
      display: block; /* Stack table rows */
    }
    .metadata tr {
      display: flex;
      flex-direction: column; /* Stack cells vertically */
      margin-bottom: 0.5rem;
      border-bottom: 1px solid #ccc; /* Visual separator */
    }
    .metadata td {
      display: block;
      width: 100%;
      text-align: left; /* Align text for readability */
    }
    .metadata td.label {
      font-weight: bold;
      width: 100%;
      padding-bottom: 0; /* Reduce spacing */
    }
    .metadata td:nth-child(2) {
      padding-top: 0;
    }
    .thumbs {
      width: 100%;
      justify-content: flex-start; /* Align thumbnails left */
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const thumbs = document.querySelectorAll(".thumbs img");
    const photos = document.querySelectorAll(".photo-div img");
    const metadataDivs = document.querySelectorAll(".metadata-div .metadata");
    const prevBtn = document.querySelector(".prev-btn");
    const nextBtn = document.querySelector(".next-btn");
    const thumbsContainer = document.querySelector(".thumbs");

    if (!thumbs.length) {
      prevBtn.disabled = true;
      nextBtn.disabled = true;
      return;
    }

    const updateActive = (fullUrl) => {
      photos.forEach((photo) => {
        if (photo.getAttribute("data-full") === fullUrl) {
          photo.classList.remove("hidden");
          photo.classList.add("active");
        } else {
          photo.classList.remove("active");
          photo.classList.add("hidden");
        }
      });

      metadataDivs.forEach((meta) => {
        if (meta.getAttribute("data-full") === fullUrl) {
          meta.classList.remove("hidden");
          meta.classList.add("active");
        } else {
          meta.classList.remove("active");
          meta.classList.add("hidden");
        }
      });

      thumbs.forEach((t) => {
        if (t.getAttribute("data-full") === fullUrl) {
          t.classList.add("active-thumb");
          const thumbRect = t.getBoundingClientRect();
          const containerRect = thumbsContainer.getBoundingClientRect();
          thumbsContainer.scrollLeft +=
            thumbRect.left -
            containerRect.left -
            containerRect.width / 2 +
            thumbRect.width / 2;
        } else {
          t.classList.remove("active-thumb");
        }
      });

      window.scrollTo(0, 0);
    };

    thumbs.forEach((thumb) => {
      thumb.addEventListener("click", () => {
        const fullUrl = thumb.getAttribute("data-full");
        updateActive(fullUrl);
      });
    });

    prevBtn.addEventListener("click", () => {
      const currentThumb =
        document.querySelector(".thumbs img.active-thumb") || thumbs[0];
      const prevThumb =
        currentThumb.previousElementSibling || thumbs[thumbs.length - 1];
      updateActive(prevThumb.getAttribute("data-full"));
    });

    nextBtn.addEventListener("click", () => {
      const currentThumb =
        document.querySelector(".thumbs img.active-thumb") || thumbs[0];
      const nextThumb = currentThumb.nextElementSibling || thumbs[0];
      updateActive(nextThumb.getAttribute("data-full"));
    });
  });
</script>
