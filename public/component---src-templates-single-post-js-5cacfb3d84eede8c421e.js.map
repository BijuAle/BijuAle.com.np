{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/singlePost.js"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","singlePost","data","title","frontmatter","description","excerpt","author","size","date","body","pageQuery"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,kCClCF,8GAyBeS,UAnBI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOD,EAAKhB,IAAIkB,YAAYD,MAC5BE,YAAaH,EAAKhB,IAAIoB,QACtBC,OAAQL,EAAKhB,IAAIkB,YAAYG,SAE/B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAKL,EAAKhB,IAAIkB,YAAYD,OAC1B,kBAAC,IAAD,CAAMK,KAAK,QAAQN,EAAKhB,IAAIkB,YAAYK,MACxC,kBAAC,cAAD,KAAcP,EAAKhB,IAAIwB,UAS1B,IAAMC,EAAS","file":"component---src-templates-single-post-js-5cacfb3d84eede8c421e.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { H1, Date } from \"../components/Typography\"\nimport { Container, Content, Post, SEO } from \"../components\"\n\nconst singlePost = ({ data }) => {\n  return (\n    <Container>\n      <SEO\n        title={data.mdx.frontmatter.title}\n        description={data.mdx.excerpt}\n        author={data.mdx.frontmatter.author}\n      />\n      <Content>\n        <Post>\n          <H1>{data.mdx.frontmatter.title}</H1>\n          <Date size=\"date\">{data.mdx.frontmatter.date}</Date>\n          <MDXRenderer>{data.mdx.body}</MDXRenderer>\n        </Post>\n      </Content>\n    </Container>\n  )\n}\n\nexport default singlePost\n\nexport const pageQuery = graphql`\n  query singlePostQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      body\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n      }\n      excerpt\n    }\n  }\n`\n"],"sourceRoot":""}