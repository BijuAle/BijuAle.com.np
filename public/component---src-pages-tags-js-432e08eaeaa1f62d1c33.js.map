{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["data","TagsPage","group","allMdx","site","siteMetadata","title","fixed","imageSharp","draggable","alt","map","tag","key","fieldValue","to","kebabCase","totalCount"],"mappings":"2FAAA,uIAOaA,EAAI,aAqEFC,UAhDE,SAAC,GAAD,QACfD,KACYE,EAFG,EAEbC,OAAUD,MAKZF,GAPe,EAGbI,KACEC,aAAgBC,MAJL,EAOfN,MAPe,OASf,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yCACA,kBAAC,IAAD,CAAKO,MAAOP,EAAKQ,WAAWD,MAAOE,WAAW,EAAOC,IAAI,UAF3D,QAIE,4BACGR,EAAMS,KAAI,SAAAC,GAAG,OACZ,wBAAIC,IAAKD,EAAIE,YACX,kBAAC,OAAD,CAAMC,GAAE,SAAWC,IAAUJ,EAAIE,YAAzB,KACLF,EAAIE,WADP,KACqBF,EAAIK,WADzB","file":"component---src-pages-tags-js-432e08eaeaa1f62d1c33.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport kebabCase from \"lodash/kebabCase\"\nimport { Link, graphql } from \"gatsby\"\nimport { SEO, Container, Content, Post } from \"../components\"\nimport Img from \"gatsby-image\"\n\nexport const data = graphql`\n  query {\n    imageSharp(fixed: { originalName: { eq: \"scroll.png\" } }) {\n      fixed {\n        ...GatsbyImageSharpFixed\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nconst TagsPage = ({\n  data: {\n    allMdx: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  data,\n}) => (\n  <Container>\n    <SEO />\n    <Content>\n      <Post>\n        <h1>All Posts</h1>\n        <Img fixed={data.imageSharp.fixed} draggable={false} alt=\"Posts\"></Img>\n        Tags:\n        <ul>\n          {group.map(tag => (\n            <li key={tag.fieldValue}>\n              <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} ({tag.totalCount})\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </Post>\n    </Content>\n  </Container>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n"],"sourceRoot":""}